/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ServiceToken, ServiceTokenInterface } from "../ServiceToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "__name",
        type: "string",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610ef6806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a08231116100975780639dc29fac116100665780639dc29fac14610228578063a457c2d71461023b578063a9059cbb1461024e578063dd62ed3e1461026157600080fd5b806370a08231146101bb5780637ab4339d146101e4578063893d20e8146101f757806395d89b411461022057600080fd5b806323b872dd116100d357806323b872dd1461016d578063313ce56714610180578063395093511461019557806340c10f19146101a857600080fd5b806306fdde0314610105578063095ea7b31461012357806313af40351461014657806318160ddd1461015b575b600080fd5b61010d61029a565b60405161011a9190610c05565b60405180910390f35b610136610131366004610c76565b61032c565b604051901515815260200161011a565b610159610154366004610ca0565b610342565b005b6002545b60405190815260200161011a565b61013661017b366004610cbb565b61034e565b60055460405160ff909116815260200161011a565b6101366101a3366004610c76565b6103b7565b6101596101b6366004610c76565b6103ed565b61015f6101c9366004610ca0565b6001600160a01b031660009081526020819052604090205490565b6101596101f2366004610cf7565b6103fb565b60055461010090046001600160a01b03166040516001600160a01b03909116815260200161011a565b61010d610500565b610159610236366004610c76565b61050f565b610136610249366004610c76565b610519565b61013661025c366004610c76565b610568565b61015f61026f366004610d78565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6060600380546102a990610dab565b80601f01602080910402602001604051908101604052809291908181526020018280546102d590610dab565b80156103225780601f106102f757610100808354040283529160200191610322565b820191906000526020600020905b81548152906001019060200180831161030557829003601f168201915b5050505050905090565b6000610339338484610575565b50600192915050565b61034b8161069a565b50565b600061035b848484610747565b6103ad84336103a885604051806060016040528060288152602001610e74602891396001600160a01b038a16600090815260016020908152604080832033845290915290205491906108ca565b610575565b5060019392505050565b3360008181526001602090815260408083206001600160a01b038716845290915281205490916103399185906103a890866108f6565b6103f78282610909565b5050565b600554600160b01b900460ff16806104125750303b155b806104275750600554600160a81b900460ff16155b61046e5760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e4b5a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b600554600160b01b900460ff16158015610498576005805461ffff60a81b191661010160a81b1790555b6104a18261069a565b6005805460ff191660121790556040805180820190915260038082526212511560ea1b60209092019182526104d891600491610af8565b506104e560038585610b7c565b5080156104fa576005805460ff60b01b191690555b50505050565b6060600480546102a990610dab565b6103f782826109e8565b600061033933846103a885604051806060016040528060258152602001610e9c602591393360009081526001602090815260408083206001600160a01b038d16845290915290205491906108ca565b6000610339338484610747565b6001600160a01b0383166105d75760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610465565b6001600160a01b0382166106385760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610465565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b6001600160a01b0381166106dc5760405162461bcd60e51b81526020600482015260096024820152683d32b93796b0b2323960b91b6044820152606401610465565b600580546001600160a01b03838116610100818102610100600160a81b031985161790945560408051949093049091168084526020840191909152917f0384899bd253d83b23daa4d29aaa2efe0563d1132b43101e9ad667235aeb951b910160405180910390a15050565b6001600160a01b0383166107ab5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610465565b6001600160a01b03821661080d5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610465565b61084a81604051806060016040528060268152602001610e4e602691396001600160a01b03861660009081526020819052604090205491906108ca565b6001600160a01b03808516600090815260208190526040808220939093559084168152205461087990826108f6565b6001600160a01b038381166000818152602081815260409182902094909455518481529092918616917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161068d565b600081848411156108ee5760405162461bcd60e51b81526004016104659190610c05565b505050900390565b60006109028284610dfc565b9392505050565b6001600160a01b03821661095f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f2061646472657373006044820152606401610465565b60025461096c90826108f6565b6002556001600160a01b03821660009081526020819052604090205461099290826108f6565b6001600160a01b038316600081815260208181526040808320949094559251848152919290917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91015b60405180910390a35050565b6001600160a01b038216610a485760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b6064820152608401610465565b610a8581604051806060016040528060228152602001610e2c602291396001600160a01b03851660009081526020819052604090205491906108ca565b6001600160a01b038316600090815260208190526040902055600254610aab9082610aec565b6002556040518181526000906001600160a01b038416907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016109dc565b60006109028284610e14565b828054610b0490610dab565b90600052602060002090601f016020900481019282610b265760008555610b6c565b82601f10610b3f57805160ff1916838001178555610b6c565b82800160010185558215610b6c579182015b82811115610b6c578251825591602001919060010190610b51565b50610b78929150610bf0565b5090565b828054610b8890610dab565b90600052602060002090601f016020900481019282610baa5760008555610b6c565b82601f10610bc35782800160ff19823516178555610b6c565b82800160010185558215610b6c579182015b82811115610b6c578235825591602001919060010190610bd5565b5b80821115610b785760008155600101610bf1565b600060208083528351808285015260005b81811015610c3257858101830151858201604001528201610c16565b81811115610c44576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b0381168114610c7157600080fd5b919050565b60008060408385031215610c8957600080fd5b610c9283610c5a565b946020939093013593505050565b600060208284031215610cb257600080fd5b61090282610c5a565b600080600060608486031215610cd057600080fd5b610cd984610c5a565b9250610ce760208501610c5a565b9150604084013590509250925092565b600080600060408486031215610d0c57600080fd5b833567ffffffffffffffff80821115610d2457600080fd5b818601915086601f830112610d3857600080fd5b813581811115610d4757600080fd5b876020828501011115610d5957600080fd5b602092830195509350610d6f9186019050610c5a565b90509250925092565b60008060408385031215610d8b57600080fd5b610d9483610c5a565b9150610da260208401610c5a565b90509250929050565b600181811c90821680610dbf57607f821691505b60208210811415610de057634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b60008219821115610e0f57610e0f610de6565b500190565b600082821015610e2657610e26610de6565b50039056fe45524332303a206275726e20616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220fc6d5e101262ff362cdf61f9a4503b52cc0d505ffb94838070ef81b0174b486964736f6c634300080a0033";

type ServiceTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ServiceTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ServiceToken__factory extends ContractFactory {
  constructor(...args: ServiceTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ServiceToken> {
    return super.deploy(overrides || {}) as Promise<ServiceToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ServiceToken {
    return super.attach(address) as ServiceToken;
  }
  connect(signer: Signer): ServiceToken__factory {
    return super.connect(signer) as ServiceToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ServiceTokenInterface {
    return new utils.Interface(_abi) as ServiceTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ServiceToken {
    return new Contract(address, _abi, signerOrProvider) as ServiceToken;
  }
}
