/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  InterestManagerCompound,
  InterestManagerCompoundInterface,
} from "../InterestManagerCompound";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipChanged",
    type: "event",
  },
  {
    inputs: [],
    name: "accrueInterest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "dai",
        type: "address",
      },
      {
        internalType: "address",
        name: "cDai",
        type: "address",
      },
      {
        internalType: "address",
        name: "comp",
        type: "address",
      },
      {
        internalType: "address",
        name: "compRecipient",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "invest",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "investmentTokenAmount",
        type: "uint256",
      },
    ],
    name: "investmentTokenToUnderlying",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeem",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "redeemInvestmentToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "setOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "underlyingAmount",
        type: "uint256",
      },
    ],
    name: "underlyingToInvestmentToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "withdrawComp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611178806100206000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063893d20e811610066578063893d20e81461010c578063a6afed9514610127578063d84d5e901461012f578063df6395ce14610142578063f3e08e1f1461015557600080fd5b806313af4035146100a35780631459457a146100b85780631e9a6950146100cb5780632afcf480146100f157806338e41a2214610104575b600080fd5b6100b66100b1366004610fa9565b610168565b005b6100b66100c6366004610fc6565b610174565b6100de6100d9366004611037565b610305565b6040519081526020015b60405180910390f35b6100de6100ff366004611063565b610550565b6100b6610854565b6000546040516001600160a01b0390911681526020016100e8565b6100b6610a45565b6100de61013d366004611063565b610af6565b6100de610150366004611063565b610b7e565b6100de610163366004611037565b610c00565b61017181610e44565b50565b600054600160a81b900460ff168061018b5750303b155b806101a05750600054600160a01b900460ff16155b6101e75760405162461bcd60e51b8152602060048201526013602482015272185b1c9958591e4b5a5b9a5d1a585b1a5e9959606a1b60448201526064015b60405180910390fd5b600054600160a81b900460ff16158015610211576000805461ffff60a01b191661010160a01b1790555b6001600160a01b0385161580159061023157506001600160a01b03841615155b801561024557506001600160a01b03831615155b801561025957506001600160a01b03821615155b6102965760405162461bcd60e51b815260206004820152600e60248201526d696e76616c69642d706172616d7360901b60448201526064016101de565b61029f86610e44565b603380546001600160a01b038088166001600160a01b0319928316179092556034805487841690831617905560358054868416908316179055603680549285169290911691909117905580156102fd576000805460ff60a81b191690555b505050505050565b6034546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610352573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610376919061107c565b60345460405163852a12e360e01b8152600481018690529192506001600160a01b03169063852a12e3906024016020604051808303816000875af11580156103c2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103e6919061107c565b1561041c5760405162461bcd60e51b815260206004820152600660248201526572656465656d60d01b60448201526064016101de565b6034546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610465573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610489919061107c565b60335460405163a9059cbb60e01b81526001600160a01b0388811660048301526024820188905292935091169063a9059cbb906044016020604051808303816000875af11580156104de573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105029190611095565b61053d5760405162461bcd60e51b815260206004820152600c60248201526b3230b496ba3930b739b332b960a11b60448201526064016101de565b6105478282610ee7565b95945050505050565b6034546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561059d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105c1919061107c565b6033546040516370a0823160e01b815230600482015291925084916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561060e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610632919061107c565b10156106735760405162461bcd60e51b815260206004820152601060248201526f696e73756666696369656e742d64616960801b60448201526064016101de565b60335460345460405163095ea7b360e01b81526001600160a01b0391821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af11580156106c8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ec9190611095565b61072b5760405162461bcd60e51b815260206004820152601060248201526f6461692d636461692d617070726f766560801b60448201526064016101de565b60345460405163140e25ad60e31b8152600481018590526001600160a01b039091169063a0712d68906024016020604051808303816000875af1158015610776573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061079a919061107c565b156107d35760405162461bcd60e51b815260206004820152600960248201526818d9185a4b5b5a5b9d60ba1b60448201526064016101de565b6034546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561081c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610840919061107c565b905061084c8183610ee7565b949350505050565b60345460408051635fe3b56760e01b8152905130926001600160a01b031691635fe3b5679160048083019260209291908290030181865afa15801561089d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108c191906110b7565b6040516374d7814960e11b81526001600160a01b038381166004830152919091169063e9af029290602401600060405180830381600087803b15801561090657600080fd5b505af115801561091a573d6000803e3d6000fd5b50506035546036546040516370a0823160e01b81526001600160a01b038681166004830152928316945063a9059cbb935091169083906370a0823190602401602060405180830381865afa158015610976573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061099a919061107c565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303816000875af11580156109e5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a099190611095565b6101715760405162461bcd60e51b815260206004820152600d60248201526c31b7b6b816ba3930b739b332b960991b60448201526064016101de565b603460009054906101000a90046001600160a01b03166001600160a01b031663a6afed956040518163ffffffff1660e01b81526004016020604051808303816000875af1158015610a9a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610abe919061107c565b15610af45760405162461bcd60e51b815260206004820152600660248201526561636372756560d01b60448201526064016101de565b565b6000610b7882603460009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b73919061107c565b610efa565b92915050565b6000610b7882603460009054906101000a90046001600160a01b03166001600160a01b031663182df0f56040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bd7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bfb919061107c565b610f12565b6033546040516370a0823160e01b815230600482015260009182916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610c4d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c71919061107c565b60345460405163db006a7560e01b8152600481018690529192506001600160a01b03169063db006a75906024016020604051808303816000875af1158015610cbd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ce1919061107c565b15610d175760405162461bcd60e51b815260206004820152600660248201526572656465656d60d01b60448201526064016101de565b6033546040516370a0823160e01b8152306004820152600091610d909184916001600160a01b0316906370a0823190602401602060405180830381865afa158015610d66573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d8a919061107c565b90610ee7565b60335460405163a9059cbb60e01b81526001600160a01b0388811660048301526024820184905292935091169063a9059cbb906044016020604051808303816000875af1158015610de5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e099190611095565b61084c5760405162461bcd60e51b815260206004820152600c60248201526b3230b496ba3930b739b332b960a11b60448201526064016101de565b6001600160a01b038116610e865760405162461bcd60e51b81526020600482015260096024820152683d32b93796b0b2323960b91b60448201526064016101de565b600080546001600160a01b038381166001600160a01b031983168117909355604080519190921680825260208201939093527f0384899bd253d83b23daa4d29aaa2efe0563d1132b43101e9ad667235aeb951b910160405180910390a15050565b6000610ef382846110ea565b9392505050565b600080610f078484610f1f565b905061084c81610f2b565b600080610f078484610f3f565b6000610ef38383610f60565b6000610b78670de0b6b3a764000083611101565b600080610f54670de0b6b3a764000085610f60565b905061084c8184610f6c565b6000610ef38284611123565b600080610f8184670de0b6b3a7640000610f60565b905061084c81846000610ef38284611101565b6001600160a01b038116811461017157600080fd5b600060208284031215610fbb57600080fd5b8135610ef381610f94565b600080600080600060a08688031215610fde57600080fd5b8535610fe981610f94565b94506020860135610ff981610f94565b9350604086013561100981610f94565b9250606086013561101981610f94565b9150608086013561102981610f94565b809150509295509295909350565b6000806040838503121561104a57600080fd5b823561105581610f94565b946020939093013593505050565b60006020828403121561107557600080fd5b5035919050565b60006020828403121561108e57600080fd5b5051919050565b6000602082840312156110a757600080fd5b81518015158114610ef357600080fd5b6000602082840312156110c957600080fd5b8151610ef381610f94565b634e487b7160e01b600052601160045260246000fd5b6000828210156110fc576110fc6110d4565b500390565b60008261111e57634e487b7160e01b600052601260045260246000fd5b500490565b600081600019048311821515161561113d5761113d6110d4565b50029056fea26469706673582212203237042775087e85022b74356a9b88b46c9a99e7c90a1d7e97a7f89baf04bd1464736f6c634300080a0033";

type InterestManagerCompoundConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: InterestManagerCompoundConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class InterestManagerCompound__factory extends ContractFactory {
  constructor(...args: InterestManagerCompoundConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<InterestManagerCompound> {
    return super.deploy(overrides || {}) as Promise<InterestManagerCompound>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): InterestManagerCompound {
    return super.attach(address) as InterestManagerCompound;
  }
  connect(signer: Signer): InterestManagerCompound__factory {
    return super.connect(signer) as InterestManagerCompound__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): InterestManagerCompoundInterface {
    return new utils.Interface(_abi) as InterestManagerCompoundInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InterestManagerCompound {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as InterestManagerCompound;
  }
}
