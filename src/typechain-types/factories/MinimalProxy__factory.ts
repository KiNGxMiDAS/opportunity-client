/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { MinimalProxy, MinimalProxyInterface } from "../MinimalProxy";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    stateMutability: "payable",
    type: "fallback",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516101c33803806101c383398101604081905261002f916100b1565b6001600160a01b03811661007a5760405162461bcd60e51b815260206004820152600e60248201526d696e76616c69642d706172616d7360901b604482015260640160405180910390fd5b60006100a760017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6100e1565b9190915550610106565b6000602082840312156100c357600080fd5b81516001600160a01b03811681146100da57600080fd5b9392505050565b60008282101561010157634e487b7160e01b600052601160045260246000fd5b500390565b60af806101146000396000f3fe60806040526000602f60017f360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbd6055565b9050366000803760008036600084545af43d6000803e8080156050573d6000f35b3d6000fd5b600082821015607457634e487b7160e01b600052601160045260246000fd5b50039056fea264697066735822122019d026470ad76ed5b66456bf3119186818880d47e742a799b61b826a6483ecb964736f6c634300080a0033";

type MinimalProxyConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MinimalProxyConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MinimalProxy__factory extends ContractFactory {
  constructor(...args: MinimalProxyConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<MinimalProxy> {
    return super.deploy(
      implementation,
      overrides || {}
    ) as Promise<MinimalProxy>;
  }
  getDeployTransaction(
    implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(implementation, overrides || {});
  }
  attach(address: string): MinimalProxy {
    return super.attach(address) as MinimalProxy;
  }
  connect(signer: Signer): MinimalProxy__factory {
    return super.connect(signer) as MinimalProxy__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MinimalProxyInterface {
    return new utils.Interface(_abi) as MinimalProxyInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MinimalProxy {
    return new Contract(address, _abi, signerOrProvider) as MinimalProxy;
  }
}
